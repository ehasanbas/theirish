from yahoofinancials import YahooFinancials as yf
import pandas as pd
import numpy as np
#import json
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

###################################################################################################################

company=['SOKM.IS','SODA.IS','SASA.IS','EKGYO.IS','DOCO.IS','DOHOL.IS','ICBCT.IS','TRKCM.IS','MGROS.IS','AGHOL.IS','VESTL.IS','KOZAA.IS','QNBFB.IS','KCHOL.IS','KLNMA.IS','GARAN.IS','AKBNK.IS','TUPRS.IS','TCELL.IS','ISCTR.IS','ISBTR.IS','EREGL.IS','BIMAS.IS','ENKAI.IS','ISKUR.IS','TTKOM.IS','ISBIR.IS','FROTO.IS','ASELS.IS','ISDMR.IS','YKBNK.IS','THYAO.IS','SAHOL.IS','ARCLK.IS','AEFES.IS','VAKBN.IS','TOASO.IS']
first_datas={}
for i in company:
    first_datas[str(i)]=yf(str(i))

###################################################################################################################

i_statements={}
for i in company:
    i_statements[str(i)]=first_datas[str(i)].get_financial_stmts('annual', 'income')

i_statements_dfs={}

for i in company:
    i_statements_dfs[str(i)]=pd.DataFrame.from_dict(i_statements[str(i)]["incomeStatementHistory"][str(i)][0])

df_income=pd.DataFrame(index=i_statements_dfs[company[0]].index, columns=company)

for i in company:
    df_income[str(i)]=i_statements_dfs[str(i)][0:]

df_income_t=df_income.transpose()

###################################################################################################################

c_f={}
for i in company:
    c_f[str(i)]=first_datas[str(i)].get_financial_stmts('annual', 'cash')

c_f_dfs={}
for i in company:
    c_f_dfs[str(i)]=pd.DataFrame.from_dict(c_f[str(i)]["cashflowStatementHistory"][str(i)][0])

df_cash=pd.DataFrame(index=c_f_dfs[company[0]].index, columns=company)

for i in company:
    df_cash[str(i)]=c_f_dfs[str(i)][0:]

df_cash_t=df_cash.transpose()

####################################################################################################################

b_s={}
for i in company:
    b_s[str(i)]=first_datas[str(i)].get_financial_stmts('annual', 'balance')

b_s_dfs={}
for i in company:
    b_s_dfs[str(i)]=pd.DataFrame.from_dict(b_s[str(i)]["balanceSheetHistory"][str(i)][0])

df_balance=pd.DataFrame(index=b_s_dfs[company[0]].index, columns=company)

for i in company:
    df_balance[str(i)]=b_s_dfs[str(i)][0:]

df_balance_t=df_balance.transpose()



################################################################################################


mix = pd.concat([df_balance_t['totalCurrentAssets'], df_cash_t['changeInCash'],df_income_t['totalRevenue']], axis=1)

####################################################################################################

datas_norm=(mix-mix.mean())/mix.std()
kmeans = KMeans(n_clusters=4,n_init=80).fit(datas_norm)
centroids = kmeans.cluster_centers_
mix['clusters']=kmeans.labels_

mix2=pd.concat([df_balance_t,df_cash_t,df_income_t,mix['clusters']],axis=1)

####################################################################################################

with pd.option_context("display.max_rows", None, "display.max_columns", None): 
    print(mix,
    file=open(r'C:\Users\ehasa\OneDrive\Desktop\Phyton docs\output\USAcompanyclustering.txt', "a"))

mix2.to_csv(r'C:\Users\ehasa\OneDrive\Desktop\Phyton docs\output\TRtop 25.csv')

#####################################################################################################

fig=plt.figure ()
ax=fig.add_subplot(111, projection='3d')
ax.scatter(datas_norm['totalCurrentAssets'].values,datas_norm['changeInCash'].values,datas_norm['totalRevenue'].values,c=kmeans.labels_,cmap='rainbow')
ax.scatter(centroids[:,0],centroids[:,1],centroids[:,2],marker="P",c='k',linewidth=5)
ax.set_xlabel('totalCurrentAssets')
ax.set_ylabel('changeInCash')
ax.set_zlabel('totalRevenue')
plt.show()

